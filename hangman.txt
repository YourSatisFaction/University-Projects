#include <stdio.h>
#include <stdlib.h>
#include <sys/stat.h>
#include "hangman.h"


int get_word(char secret[]){
    // check if file exists first and is readable
    FILE *fp = fopen(WORDLIST_FILENAME, "rb");
    if( fp == NULL ){
        fprintf(stderr, "No such file or directory: %s\n", WORDLIST_FILENAME);
        return 1;
    }

    // get the filesize first
    struct stat st;
    stat(WORDLIST_FILENAME, &st);
    long int size = st.st_size;

    do{
        // generate random number between 0 and filesize
        long int random = (rand() % size) + 1;
        // seek to the random position of file
        fseek(fp, random, SEEK_SET);
        // get next word in row ;)
        int result = fscanf(fp, "%*s %20s", secret);
        if( result != EOF )
            break;
    }while(1);

    fclose(fp);

    return 0;
}
int is_word_guessed(const char secret[], const char letters_guessed[]){
 int n=0,m=0,i,j,count=0,flag;
 for (i=0; secret[i]!='\0'; i++){
  n++;
 }
 for (i=0; letters_guessed[i]!='\0'; i++){
  m++;
 }
 for (i=0; i<n; i++){
  flag=0;
  for (j=0; j<m; j++){
   if (secret[i] == letters_guessed[j]){
    flag=1;
   }
  }
  if (flag==1){
   count++;
  }
 }
 if (count==n){
  return 1;
 }else return 0;
}
void get_guessed_word(const char secret[], const char letters_guessed[], char guessed_word[]){
    int n=0,m=0,i,j,flag;
 for (i=0; secret[i]!='\0'; i++){
  n++;
 }
 for (i=0; letters_guessed[i]!='\0'; i++){
  m++;
 }
 for (i=0; i<n; i++){
  flag=0;
  for (j=0; j<m; j++){
   if (secret[i] == letters_guessed[j]){
    flag=1;
   }
  }
  if(flag==1){
   guessed_word[i]=secret[i];
  }else guessed_word[i]='_';
 }
 guessed_word[n+1] = '\0';
}
void get_available_letters(const char letters_guessed[], char available_letters[]){
 int i;
 char array[]="abcdefghijklmnopqrstuvwxyz";
 int m=0,j,count=0;
 for (i=0; letters_guessed[i]!='\0'; i++){
  if(letters_guessed[i]!=' ')m++;
 }
 for(i=0; i<m; i++){
  for(j=0; j<26; j++){
   if (letters_guessed[i]==array[j]){
    array[j]=' ';
   }
  }
 }
 for(i=0; i<26; i++){
  if (array[i]!=' '){
   available_letters[count]=array[i];
   count++;
  }
 }available_letters[count]='\0';
}
void hangman(const char secret[]) {
    printf("Welcome to the game, Hangman!\n");
    int n=0,i,count=8,flag=0;
    for (i=0; secret[i]!='\0'; i++){
  n++;
 } char letters_guessed[26],set_of_letters[n];
 for (i=0; i<26; i++){
     letters_guessed[i]=' ';
 }
 char available_letters[26];
 char compare[n], guessed_word[n];
 for (i=0; i<n; i++){
  compare[i]='_';
  set_of_letters[i]=' ';
  guessed_word[i]='_';
 }
    printf("I am thinking of a word that is %d letters long.\n", n);
    for (i=0; count!=0; i++){
        printf ("-------------\n");
        printf ("You have %d guesses left.\n", count);
        get_available_letters(letters_guessed, available_letters);
        printf ("Available letters: ");
            for (int j=0; j<26; j++){
                if(available_letters[j]>='a'&&available_letters[j]<='z'){
                    printf("%c",available_letters[j]); 
                }
            }
        printf ("\n");
 printf ("Please guess a letter: ");
 scanf ("%s",&set_of_letters[0]);
 if (set_of_letters[n-1]!=' '){
         for (int j=0; j<n; j++){
             if(set_of_letters[j]>='A'&&set_of_letters[j]<='Z'){
                set_of_letters[j]+=32;
            }
        }
        if (is_word_guessed(secret, set_of_letters)==1){
         printf ("Congratulations, you won!");
         return;
     }else{ 
        printf ("Sorry, bad guess. The word was %s. ", secret);
    return;
     }
 }if(set_of_letters[0]>='A'&&set_of_letters[0]<='Z'){
     set_of_letters[0]+=32;
 }
 if(set_of_letters[0]>='a'&&set_of_letters[0]<='z'){
    letters_guessed[i]=set_of_letters[0];
    get_guessed_word(secret, letters_guessed, guessed_word);
    for (int j=0; j<n; j++){
        if (compare[j]!=guessed_word[j]){
            flag=1;
            compare[j]=guessed_word[j];
        }
    }
    if(i!=0){
        for(int j=i-1; j!=-1; j--){
            if (letters_guessed[j]==letters_guessed[i]){
                flag=2;
} 
        }
    }
    if (flag==1){
        printf ("Good guess:");
        flag=0;
        for (int j=0; j<n; j++){
            printf (" %c", guessed_word[j]);
        }
    }else if (flag==0){
        printf ("Oops! That letter is not in my word:");
        count--;
        for (int j=0; j<n; j++){
            printf (" %c", guessed_word[j]);
        }
    }else if(flag==2){
printf ("Oops! You've already guessed that letter:");
        for (int j=0; j<n; j++){
            printf (" %c", guessed_word[j]);
        }
}
    printf("\n");
    if(is_word_guessed(secret,letters_guessed)==1){
        printf("-------------\n");
        printf("Congratulations, you won!");
        return;
    }
 }else {
    printf("Oops! '%c' is not a valid letter:",set_of_letters[0]);
    i--;
    for (int j=0; j<n; j++){
            printf (" %c", guessed_word[j]);
        }
        printf("\n");
 }
// get_guessed_word(secret, letters_guessed, guessed_word);
}
printf("-------------\n");
printf("Sorry, you ran out of guesses. The word was %s. ",secret);
}